import os
import sys
import argparse

from static_analysis.static_analysis import analyze_file as static_analyze
from dynamic_analysis.dynamic_analysis import analyze_file as dynamic_analyze


def print_information(analysis_type, src_path, dst_path):
    print('=' * 20)
    print(f'Type of analysis : {analysis_type}')
    print(f'Source path of dataset : {src_path}')
    if not os.path.exists(src_path):
        print(f'Check dataset path : {src_path}')
        sys.exit()
    print(f'Destination path of result : {dst_path}')
    if not os.path.exists(dst_path):
        print(f'Generate {dst_path}...')
        os.makedirs(dst_path)
    print('=' * 20)


def main(analysis_type, src_path, dst_path):
    print_information(analysis_type, src_path, dst_path)    # 기본 정보 출력

    # Static analysis container 구동
    if analysis_type == 'static':
        static_analyze.delay(src_path, dst_path)

    # Dynamic analysis(using Cuckoo-sandbox) container 구동
    elif analysis_type == 'dynamic':
        dynamic_analyze.delay(src_path, dst_path)

    # Static and dynamic analyzer container 모두 구동
    else:
        static_analyze.delay(src_path, dst_path)
        dynamic_analyze.delay(src_path, dst_path)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='전반적인 프로그램 설명')
    parser.add_argument('analysis_type', help='분석 종류 (static, dynamic, hybrid)')
    parser.add_argument('dataset_dir', help='분석 데이터셋 directory')
    parser.add_argument('results_dir', help='분석 결과 저장 directory')
    parser.add_argument('--option_argument', type=int, default=0)    # option argument
    args = parser.parse_args()

    main(args.analysis_type, args.dataset_dir, args.results_dir)
