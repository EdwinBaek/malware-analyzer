import os
import json
import requests
import time
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

REPORTS_DIR = os.getenv('REPORTS_DIR')
SERVER_URL = os.getenv('SERVER_URL')


class ReportHandler(FileSystemEventHandler):
    def on_created(self, event):
        if event.is_directory:
            return
        if event.src_path.endswith("report.json"):
            self.send_report(event.src_path)

    def send_report(self, report_path):
        try:
            with open(report_path, 'r') as f:
                report_data = json.load(f)

            response = requests.post(SERVER_URL, json=report_data)
            if response.status_code == 200:
                print(f"Successfully sent report: {report_path}")
            else:
                print(f"Failed to send report: {report_path}. Status code: {response.status_code}")
        except Exception as e:
            print(f"Error sending report: {report_path}. Error: {str(e)}")


if __name__ == "__main__":
    event_handler = ReportHandler()
    observer = Observer()
    observer.schedule(event_handler, REPORTS_DIR, recursive=True)
    observer.start()

    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        observer.stop()
    observer.join()